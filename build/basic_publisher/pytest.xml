<?xml version="1.0" encoding="utf-8"?><testsuite errors="0" failures="2" name="pytest" skips="0" tests="3" time="0.525"><testcase classname="basic_publisher.test.test_copyright" file="test/test_copyright.py" line="18" name="test_copyright" time="0.010536432266235352"><failure message="AssertionError: Found errors
assert 1 == 0">test/test_copyright.py:23: in test_copyright
    assert rc == 0, &apos;Found errors&apos;
E   AssertionError: Found errors
E   assert 1 == 0</failure><system-err>basic_publisher/publisher_node.py: could not find copyright notice
1 errors, checked 5 files
</system-err></testcase><testcase classname="basic_publisher.test.test_flake8" file="test/test_flake8.py" line="18" name="test_flake8" time="0.36121344566345215"><failure message="AssertionError: Found errors
assert 1 == 0">test/test_flake8.py:23: in test_flake8
    assert rc == 0, &apos;Found errors&apos;
E   AssertionError: Found errors
E   assert 1 == 0</failure><system-out>
./basic_publisher/publisher_node.py:6:1: E302 expected 2 blank lines, found 1
class MinimalPublisher(Node):
^

./basic_publisher/publisher_node.py:8:1: W191 indentation contains tabs
	def __init__(self):
^

./basic_publisher/publisher_node.py:9:1: W191 indentation contains tabs
		super().__init__(&apos;minimal_publisher&apos;)
^

./basic_publisher/publisher_node.py:10:1: W191 indentation contains tabs
		self.red_publisher_ = self.create_publisher(String, &apos;led_red_topic&apos;, 10)
^

./basic_publisher/publisher_node.py:11:1: W191 indentation contains tabs
		self.yellow_publisher_ = self.create_publisher(String, &apos;led_yellow_topic&apos;, 10)
^

./basic_publisher/publisher_node.py:12:1: W191 indentation contains tabs
		self.green_publisher_ = self.create_publisher(String, &apos;led_green_topic&apos;, 10)
^

./basic_publisher/publisher_node.py:13:1: W191 indentation contains tabs
		self.all_publisher_ = self.create_publisher(String, &apos;led_all_topic&apos;, 10)
^

./basic_publisher/publisher_node.py:14:1: W191 indentation contains tabs
		self.motor_publisher_ = self.create_publisher(String, &apos;motor_topic&apos;, 10)
^

./basic_publisher/publisher_node.py:15:1: W191 indentation contains tabs
		timer_period = 2 # second
^

./basic_publisher/publisher_node.py:15:19: E261 at least two spaces before inline comment
		timer_period = 2 # second
                  ^

./basic_publisher/publisher_node.py:16:1: W191 indentation contains tabs
		self.timer = self.create_timer(timer_period, self.timer_callback)
^

./basic_publisher/publisher_node.py:17:1: W191 indentation contains tabs
		self.i = 0
^

./basic_publisher/publisher_node.py:18:1: W191 indentation contains tabs
		if self.i % 11 == 0:
^

./basic_publisher/publisher_node.py:19:1: W191 indentation contains tabs
			self.condition = 5
^

./basic_publisher/publisher_node.py:20:1: W191 indentation contains tabs
		elif self.i % 7 == 0:
^

./basic_publisher/publisher_node.py:21:1: W191 indentation contains tabs
			self.condition = 4
^

./basic_publisher/publisher_node.py:22:1: W191 indentation contains tabs
		elif self.i % 5 == 0:
^

./basic_publisher/publisher_node.py:23:1: W191 indentation contains tabs
			self.condition = 3
^

./basic_publisher/publisher_node.py:24:1: W191 indentation contains tabs
		elif self.i % 3 == 0:
^

./basic_publisher/publisher_node.py:25:1: W191 indentation contains tabs
			self.condition = 2
^

./basic_publisher/publisher_node.py:26:1: W191 indentation contains tabs
		else:
^

./basic_publisher/publisher_node.py:27:1: W191 indentation contains tabs
			self.condition = 1
^

./basic_publisher/publisher_node.py:29:1: W191 indentation contains tabs
	def timer_callback(self):
^

./basic_publisher/publisher_node.py:30:1: W191 indentation contains tabs
		red = String()
^

./basic_publisher/publisher_node.py:31:1: W191 indentation contains tabs
		yellow = String()
^

./basic_publisher/publisher_node.py:32:1: W191 indentation contains tabs
		green = String()
^

./basic_publisher/publisher_node.py:33:1: W191 indentation contains tabs
		all_led = String()
^

./basic_publisher/publisher_node.py:34:1: W191 indentation contains tabs
		motor = String()
^

./basic_publisher/publisher_node.py:35:1: W191 indentation contains tabs
		if condition == 1:
^

./basic_publisher/publisher_node.py:35:6: F821 undefined name &apos;condition&apos;
		if condition == 1:
     ^

./basic_publisher/publisher_node.py:36:1: W191 indentation contains tabs
			red.data = &quot;on&quot;
^

./basic_publisher/publisher_node.py:37:1: W191 indentation contains tabs
			yellow.data = &quot;off&quot;
^

./basic_publisher/publisher_node.py:38:1: W191 indentation contains tabs
			green.data = &quot;off&quot;
^

./basic_publisher/publisher_node.py:39:1: W191 indentation contains tabs
			all_led.data = &quot;off&quot;
^

./basic_publisher/publisher_node.py:40:1: W191 indentation contains tabs
			motor.data = &quot;lock&quot;
^

./basic_publisher/publisher_node.py:41:1: W191 indentation contains tabs
		elif condition == 2:
^

./basic_publisher/publisher_node.py:41:8: F821 undefined name &apos;condition&apos;
		elif condition == 2:
       ^

./basic_publisher/publisher_node.py:42:1: W191 indentation contains tabs
			red.data = &quot;off&quot;
^

./basic_publisher/publisher_node.py:43:1: W191 indentation contains tabs
			yellow.data = &quot;on&quot;
^

./basic_publisher/publisher_node.py:44:1: W191 indentation contains tabs
			green.data = &quot;off&quot;
^

./basic_publisher/publisher_node.py:45:1: W191 indentation contains tabs
			all_led.data = &quot;off&quot;
^

./basic_publisher/publisher_node.py:46:1: W191 indentation contains tabs
			motor.data = &quot;unlock&quot;
^

./basic_publisher/publisher_node.py:47:1: W191 indentation contains tabs
		if condition == 3:
^

./basic_publisher/publisher_node.py:47:6: F821 undefined name &apos;condition&apos;
		if condition == 3:
     ^

./basic_publisher/publisher_node.py:48:1: W191 indentation contains tabs
			red.data = &quot;off&quot;
^

./basic_publisher/publisher_node.py:49:1: W191 indentation contains tabs
			yellow.data = &quot;off&quot;
^

./basic_publisher/publisher_node.py:50:1: W191 indentation contains tabs
			green.data = &quot;on&quot;
^

./basic_publisher/publisher_node.py:51:1: W191 indentation contains tabs
			all_led.data = &quot;off&quot;
^

./basic_publisher/publisher_node.py:52:1: W191 indentation contains tabs
			motor.data = &quot;lock&quot;
^

./basic_publisher/publisher_node.py:53:1: W191 indentation contains tabs
		if condition == 4:
^

./basic_publisher/publisher_node.py:53:6: F821 undefined name &apos;condition&apos;
		if condition == 4:
     ^

./basic_publisher/publisher_node.py:54:1: W191 indentation contains tabs
			red.data = &quot;off&quot;
^

./basic_publisher/publisher_node.py:55:1: W191 indentation contains tabs
			yellow.data = &quot;off&quot;
^

./basic_publisher/publisher_node.py:56:1: W191 indentation contains tabs
			green.data = &quot;off&quot;
^

./basic_publisher/publisher_node.py:57:1: W191 indentation contains tabs
			all_led.data = &quot;on&quot;
^

./basic_publisher/publisher_node.py:58:1: W191 indentation contains tabs
			motor.data = &quot;unlock&quot;
^

./basic_publisher/publisher_node.py:59:1: W191 indentation contains tabs
		if condition == 5:
^

./basic_publisher/publisher_node.py:59:6: F821 undefined name &apos;condition&apos;
		if condition == 5:
     ^

./basic_publisher/publisher_node.py:60:1: W191 indentation contains tabs
			red.data = &quot;on&quot;
^

./basic_publisher/publisher_node.py:61:1: W191 indentation contains tabs
			yellow.data = &quot;off&quot;
^

./basic_publisher/publisher_node.py:62:1: W191 indentation contains tabs
			green.data = &quot;on&quot;
^

./basic_publisher/publisher_node.py:63:1: W191 indentation contains tabs
			all_led.data = &quot;off&quot;
^

./basic_publisher/publisher_node.py:64:1: W191 indentation contains tabs
			motor.data = &quot;lock&quot;
^

./basic_publisher/publisher_node.py:65:1: W191 indentation contains tabs
		self.publisher_.publish(msg)
^

./basic_publisher/publisher_node.py:65:27: F821 undefined name &apos;msg&apos;
		self.publisher_.publish(msg)
                          ^

./basic_publisher/publisher_node.py:66:1: W191 indentation contains tabs
		self.get_logger().info(&apos;So many messages: [{},{},{},{},{}]&apos;.format(red.data,
^

./basic_publisher/publisher_node.py:67:1: W191 indentation contains tabs
			                                                               yellow.data,
^

./basic_publisher/publisher_node.py:67:4: E101 indentation contains mixed spaces and tabs
			                                                               yellow.data,
   ^

./basic_publisher/publisher_node.py:67:67: E128 continuation line under-indented for visual indent
			                                                               yellow.data,
                                                                  ^

./basic_publisher/publisher_node.py:68:1: W191 indentation contains tabs
			                                                               green.data,
^

./basic_publisher/publisher_node.py:68:4: E101 indentation contains mixed spaces and tabs
			                                                               green.data,
   ^

./basic_publisher/publisher_node.py:68:67: E128 continuation line under-indented for visual indent
			                                                               green.data,
                                                                  ^

./basic_publisher/publisher_node.py:69:1: W191 indentation contains tabs
			                                                               all_led.data,
^

./basic_publisher/publisher_node.py:69:4: E101 indentation contains mixed spaces and tabs
			                                                               all_led.data,
   ^

./basic_publisher/publisher_node.py:69:67: E128 continuation line under-indented for visual indent
			                                                               all_led.data,
                                                                  ^

./basic_publisher/publisher_node.py:70:1: W191 indentation contains tabs
			                                                               motor.data))
^

./basic_publisher/publisher_node.py:70:4: E101 indentation contains mixed spaces and tabs
			                                                               motor.data))
   ^

./basic_publisher/publisher_node.py:70:67: E128 continuation line under-indented for visual indent
			                                                               motor.data))
                                                                  ^

./basic_publisher/publisher_node.py:71:1: W191 indentation contains tabs
		self.i += 1
^

./basic_publisher/publisher_node.py:73:1: E302 expected 2 blank lines, found 1
def main(args=None):
^

./basic_publisher/publisher_node.py:74:1: W191 indentation contains tabs
	rclpy.init(args=args)
^

./basic_publisher/publisher_node.py:75:1: W191 indentation contains tabs
	minimal_publisher = MinimalPublisher()
^

./basic_publisher/publisher_node.py:76:1: W191 indentation contains tabs
	rclpy.spin(minimal_publisher)
^

./basic_publisher/publisher_node.py:78:1: E305 expected 2 blank lines after class or function definition, found 1
if __name__ == &apos;__main__&apos;:
^

./basic_publisher/publisher_node.py:79:1: W391 blank line at end of file
	main()^

4     E101 indentation contains mixed spaces and tabs
4     E128 continuation line under-indented for visual indent
1     E261 at least two spaces before inline comment
2     E302 expected 2 blank lines, found 1
1     E305 expected 2 blank lines after class or function definition, found 1
6     F821 undefined name &apos;condition&apos;
66    W191 indentation contains tabs
1     W391 blank line at end of file

6 files checked
85 errors

&apos;E&apos;-type errors: 12
&apos;F&apos;-type errors: 6
&apos;W&apos;-type errors: 67

Checked files:

* ./setup.py
* ./test/test_flake8.py
* ./test/test_pep257.py
* ./test/test_copyright.py
* ./basic_publisher/__init__.py
* ./basic_publisher/publisher_node.py
</system-out></testcase><testcase classname="basic_publisher.test.test_pep257" file="test/test_pep257.py" line="18" name="test_pep257" time="0.05189943313598633"><system-out>checking ./basic_publisher/__init__.py
checking ./basic_publisher/publisher_node.py
checking ./setup.py
checking ./test/test_copyright.py
checking ./test/test_flake8.py
checking ./test/test_pep257.py
checking test/test_copyright.py
checking test/test_flake8.py
checking test/test_pep257.py
No problems found
</system-out></testcase></testsuite>