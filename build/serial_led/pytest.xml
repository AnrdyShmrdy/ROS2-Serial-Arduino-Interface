<?xml version="1.0" encoding="utf-8"?><testsuite errors="0" failures="2" name="pytest" skips="0" tests="3" time="0.326"><testcase classname="serial_led.test.test_copyright" file="test/test_copyright.py" line="18" name="test_copyright" time="0.006330966949462891"><failure message="AssertionError: Found errors
assert 1 == 0">test/test_copyright.py:23: in test_copyright
    assert rc == 0, &apos;Found errors&apos;
E   AssertionError: Found errors
E   assert 1 == 0</failure><system-err>serial_led/led_node.py: could not find copyright notice
1 errors, checked 5 files
</system-err></testcase><testcase classname="serial_led.test.test_flake8" file="test/test_flake8.py" line="18" name="test_flake8" time="0.23569440841674805"><failure message="AssertionError: Found errors
assert 1 == 0">test/test_flake8.py:23: in test_flake8
    assert rc == 0, &apos;Found errors&apos;
E   AssertionError: Found errors
E   assert 1 == 0</failure><system-out>
./serial_led/led_node.py:7:1: E302 expected 2 blank lines, found 1
class LedController(Node):
^

./serial_led/led_node.py:9:1: W191 indentation contains tabs
	def __init__(self):
^

./serial_led/led_node.py:10:1: W191 indentation contains tabs
		super().__init__(&apos;led_controller&apos;)
^

./serial_led/led_node.py:11:1: W191 indentation contains tabs
		self.red_sub = self.create_subscription(String,
^

./serial_led/led_node.py:12:1: W191 indentation contains tabs
			                                         &apos;led_red_topic&apos;,
^

./serial_led/led_node.py:12:4: E101 indentation contains mixed spaces and tabs
			                                         &apos;led_red_topic&apos;,
   ^

./serial_led/led_node.py:12:45: E127 continuation line over-indented for visual indent
			                                         &apos;led_red_topic&apos;,
                                            ^

./serial_led/led_node.py:13:1: W191 indentation contains tabs
			                                         self.red_listener_callback,
^

./serial_led/led_node.py:13:4: E101 indentation contains mixed spaces and tabs
			                                         self.red_listener_callback,
   ^

./serial_led/led_node.py:14:1: W191 indentation contains tabs
			                                         10)
^

./serial_led/led_node.py:14:4: E101 indentation contains mixed spaces and tabs
			                                         10)
   ^

./serial_led/led_node.py:15:1: W191 indentation contains tabs
		self.red_sub # prevent unused variable warning
^

./serial_led/led_node.py:15:15: E261 at least two spaces before inline comment
		self.red_sub # prevent unused variable warning
              ^

./serial_led/led_node.py:16:1: W191 indentation contains tabs
		self.yellow_sub = self.create_subscription(String,
^

./serial_led/led_node.py:17:1: W191 indentation contains tabs
			                                         &apos;led_yellow_topic&apos;,
^

./serial_led/led_node.py:17:4: E101 indentation contains mixed spaces and tabs
			                                         &apos;led_yellow_topic&apos;,
   ^

./serial_led/led_node.py:17:45: E128 continuation line under-indented for visual indent
			                                         &apos;led_yellow_topic&apos;,
                                            ^

./serial_led/led_node.py:18:1: W191 indentation contains tabs
			                                         self.yellow_listener_callback,
^

./serial_led/led_node.py:18:4: E101 indentation contains mixed spaces and tabs
			                                         self.yellow_listener_callback,
   ^

./serial_led/led_node.py:18:45: E128 continuation line under-indented for visual indent
			                                         self.yellow_listener_callback,
                                            ^

./serial_led/led_node.py:19:1: W191 indentation contains tabs
			                                         10)
^

./serial_led/led_node.py:19:4: E101 indentation contains mixed spaces and tabs
			                                         10)
   ^

./serial_led/led_node.py:19:45: E128 continuation line under-indented for visual indent
			                                         10)
                                            ^

./serial_led/led_node.py:20:1: W191 indentation contains tabs
		self.yellow_sub # prevent unused variable warning
^

./serial_led/led_node.py:20:18: E261 at least two spaces before inline comment
		self.yellow_sub # prevent unused variable warning
                 ^

./serial_led/led_node.py:21:1: W191 indentation contains tabs
		self.green_sub = self.create_subscription(String,
^

./serial_led/led_node.py:22:1: W191 indentation contains tabs
			                                         &apos;led_green_topic&apos;,
^

./serial_led/led_node.py:22:4: E101 indentation contains mixed spaces and tabs
			                                         &apos;led_green_topic&apos;,
   ^

./serial_led/led_node.py:23:1: W191 indentation contains tabs
			                                         self.green_listener_callback,
^

./serial_led/led_node.py:23:4: E101 indentation contains mixed spaces and tabs
			                                         self.green_listener_callback,
   ^

./serial_led/led_node.py:24:1: W191 indentation contains tabs
			                                         10)
^

./serial_led/led_node.py:24:4: E101 indentation contains mixed spaces and tabs
			                                         10)
   ^

./serial_led/led_node.py:25:1: W191 indentation contains tabs
		self.green_sub # prevent unused variable warning
^

./serial_led/led_node.py:25:17: E261 at least two spaces before inline comment
		self.green_sub # prevent unused variable warning
                ^

./serial_led/led_node.py:26:1: W191 indentation contains tabs
		self.all_led_sub = self.create_subscription(String,
^

./serial_led/led_node.py:27:1: W191 indentation contains tabs
			                                         &apos;led_all_topic&apos;,
^

./serial_led/led_node.py:27:4: E101 indentation contains mixed spaces and tabs
			                                         &apos;led_all_topic&apos;,
   ^

./serial_led/led_node.py:27:45: E128 continuation line under-indented for visual indent
			                                         &apos;led_all_topic&apos;,
                                            ^

./serial_led/led_node.py:28:1: W191 indentation contains tabs
			                                         self.all_listener_callback,
^

./serial_led/led_node.py:28:4: E101 indentation contains mixed spaces and tabs
			                                         self.all_listener_callback,
   ^

./serial_led/led_node.py:28:45: E128 continuation line under-indented for visual indent
			                                         self.all_listener_callback,
                                            ^

./serial_led/led_node.py:29:1: W191 indentation contains tabs
			                                         10)
^

./serial_led/led_node.py:29:4: E101 indentation contains mixed spaces and tabs
			                                         10)
   ^

./serial_led/led_node.py:29:45: E128 continuation line under-indented for visual indent
			                                         10)
                                            ^

./serial_led/led_node.py:30:1: W191 indentation contains tabs
		self.all_led_sub # prevent unused variable warning
^

./serial_led/led_node.py:30:19: E261 at least two spaces before inline comment
		self.all_led_sub # prevent unused variable warning
                  ^

./serial_led/led_node.py:33:1: W191 indentation contains tabs
	def red_listener_callback(self, msg):
^

./serial_led/led_node.py:33:2: E303 too many blank lines (2)
	def red_listener_callback(self, msg):
 ^

./serial_led/led_node.py:34:1: W191 indentation contains tabs
		self.ser = serial.Serial(&apos;/dev/ttyACM0&apos;)
^

./serial_led/led_node.py:35:1: W191 indentation contains tabs
		if msg == &quot;on&quot;:
^

./serial_led/led_node.py:36:1: W191 indentation contains tabs
			self.ser.write(b&quot;red on!&quot;)
^

./serial_led/led_node.py:37:1: W191 indentation contains tabs
		self.ser.close()
^

./serial_led/led_node.py:39:1: W191 indentation contains tabs
	def yellow_listener_callback(self, msg):
^

./serial_led/led_node.py:40:1: W191 indentation contains tabs
		self.ser = serial.Serial(&apos;/dev/ttyACM0&apos;)
^

./serial_led/led_node.py:41:1: W191 indentation contains tabs
		if msg == &quot;on&quot;:
^

./serial_led/led_node.py:42:1: W191 indentation contains tabs
			self.ser.write(b&quot;yellow on!&quot;)
^

./serial_led/led_node.py:43:1: W191 indentation contains tabs
		self.ser.close()
^

./serial_led/led_node.py:45:1: W191 indentation contains tabs
	def green_listener_callback(self, msg):
^

./serial_led/led_node.py:46:1: W191 indentation contains tabs
		self.ser = serial.Serial(&apos;/dev/ttyACM0&apos;)
^

./serial_led/led_node.py:47:1: W191 indentation contains tabs
		if msg == &quot;on&quot;:
^

./serial_led/led_node.py:48:1: W191 indentation contains tabs
			self.ser.write(b&quot;green on!&quot;)
^

./serial_led/led_node.py:49:1: W191 indentation contains tabs
		self.ser.close()
^

./serial_led/led_node.py:51:1: W191 indentation contains tabs
	def all_listener_callback(self, msg):
^

./serial_led/led_node.py:52:1: W191 indentation contains tabs
		self.ser = serial.Serial(&apos;/dev/ttyACM0&apos;)
^

./serial_led/led_node.py:53:1: W191 indentation contains tabs
		if msg == &quot;on&quot;:
^

./serial_led/led_node.py:54:1: W191 indentation contains tabs
			self.ser.write(b&quot;all on!&quot;)
^

./serial_led/led_node.py:55:1: W191 indentation contains tabs
		self.ser.close()
^

./serial_led/led_node.py:59:1: W191 indentation contains tabs
	rclpy.init(args=args)
^

./serial_led/led_node.py:60:1: W191 indentation contains tabs
	led_controller = LedController()
^

./serial_led/led_node.py:61:1: W191 indentation contains tabs
	rclpy.spin(led_controller)
^

./serial_led/led_node.py:63:1: E305 expected 2 blank lines after class or function definition, found 1
if __name__ == &apos;__main__&apos;:
^

./serial_led/led_node.py:64:1: W391 blank line at end of file
	main()^

12    E101 indentation contains mixed spaces and tabs
1     E127 continuation line over-indented for visual indent
6     E128 continuation line under-indented for visual indent
4     E261 at least two spaces before inline comment
1     E302 expected 2 blank lines, found 1
1     E303 too many blank lines (2)
1     E305 expected 2 blank lines after class or function definition, found 1
45    W191 indentation contains tabs
1     W391 blank line at end of file

6 files checked
72 errors

&apos;E&apos;-type errors: 26
&apos;W&apos;-type errors: 46

Checked files:

* ./setup.py
* ./test/test_flake8.py
* ./test/test_pep257.py
* ./test/test_copyright.py
* ./serial_led/led_node.py
* ./serial_led/__init__.py
</system-out></testcase><testcase classname="serial_led.test.test_pep257" file="test/test_pep257.py" line="18" name="test_pep257" time="0.02023625373840332"><system-out>checking ./serial_led/__init__.py
checking ./serial_led/led_node.py
checking ./setup.py
checking ./test/test_copyright.py
checking ./test/test_flake8.py
checking ./test/test_pep257.py
checking test/test_copyright.py
checking test/test_flake8.py
checking test/test_pep257.py
No problems found
</system-out></testcase></testsuite>